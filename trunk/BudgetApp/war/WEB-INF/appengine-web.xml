<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>gene.com:gmbt-qa-sp2b01</application>
	<version>r5-v04</version>

	<!-- Allows App Engine to send multiple requests to one instance in parallel: -->
	<threadsafe>true</threadsafe>
	<sessions-enabled>true</sessions-enabled>

	<instance-class>F4</instance-class>
	<automatic-scaling>
		<min-idle-instances>4</min-idle-instances>
		<!-- ‘automatic’ is the default value. -->
		<max-idle-instances>automatic</max-idle-instances>
		<!-- ‘automatic’ is the default value. -->
		<min-pending-latency>30ms</min-pending-latency>
		<max-pending-latency>automatic</max-pending-latency>
		<max-concurrent-requests>100</max-concurrent-requests>
	</automatic-scaling>
	<!-- <static-files>
		<include path="/SlickGrid-master/*">
		</include>
		<include path="/images/*">
		</include>
		<include path="/css/*">
		</include>
		<include path="/scripts/*">
		</include>
	</static-files> -->

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
	</system-properties>

	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		<sessions-enabled>true</sessions-enabled> It's possible to reduce request 
		latency by configuring your application to asynchronously write HTTP session 
		data to the datastore: <async-session-persistence enabled="true" /> With 
		this feature enabled, there is a very small chance your app will see stale 
		session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions -->

</appengine-web-app>
